{
	"settings": {
		"react": {
			"version": "detect"
		}
	},
	"env": {
		"browser": true,
		"es6": true
	},
	"extends": [
		"react-app",
		"eslint:recommended",
		"plugin:react/recommended",
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended",
		"prettier"
	],
	"plugins": [
		"react",
		"@typescript-eslint",
		"prettier",
		"simple-import-sort",
		"import"
	],
	"globals": {
		"Atomics": "readonly",
		"SharedArrayBuffer": "readonly"
	},
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaFeatures": {
			"jsx": true
		},
		"ecmaVersion": 2018,
		"sourceType": "module",
		"project": "./tsconfig.json"
	},
	"rules": {
		"simple-import-sort/imports": [
			"warn",
			{
				"groups": [
					// Packages `react` related packages come first.
					[
						"^react",
						"^@?\\w"
					],
					// MUI packages.
					[
						"^(@mui)(/.*|$)"
					],
					//Shared types packages
					[
						"^(shared/types)(/.*|$)"
					],
					// Api packages.
					[
						"^(app/api)(/.*|$)"
					],
					// Internal packages.
					[
						"^(app/store)(/.*|$)"
					],
					//Rest shared packages
					[
						"^(shared/(constants|hooks|config|utils|services))(/.*|$)"
					],
					// Components packages.
					[
						"^(shared/components)(/.*|$)"
					],
					// Side effect imports.
					[
						"^\\u0000"
					],
					// Parent imports. Put `..` last.
					[
						"^\\.\\.(?!/?$)",
						"^\\.\\./?$"
					],
					// Other relative imports. Put same-folder imports and `.` last.
					[
						"^\\./(?=.*/)(?!/?$)",
						"^\\.(?!/?$)",
						"^\\./?$"
					],
					// Style imports.
					[
						"^.+\\.?(css)$"
					]
				]
			}
		],
		"react/react-in-jsx-scope": "off",
		"no-param-reassign": 0,
		"no-mixed-spaces-and-tabs": 0,
		"react-hooks/exhaustive-deps": 0,
		"no-sequences": [
			0,
			"SequenceExpression"
		],
		"@typescript-eslint/no-non-null-assertion": 0,
		"@typescript-eslint/no-empty-function": 0,
		"no-duplicate-imports": [
			"error",
			{
				"includeExports": true
			}
		],
		"padding-line-between-statements": [
			"warn",
			{
				"blankLine": "always",
				"prev": "multiline-const",
				"next": "*"
			}
		]
	}
}
